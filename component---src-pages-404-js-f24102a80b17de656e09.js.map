{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/hooks/site-logo.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_3035821272_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","siteTitle","logo","_3253992087","file","childImageSharp","react_default","className","href","gatsby_image_default","fixed","alt","gatsby_browser_entry","to","activeClassName","Layout","header","target","Date","getFullYear","_1032540886"],"mappings":"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","file":"component---src-pages-404-js-f24102a80b17de656e09.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) { // TODO clean up & update\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO // TODO add description\n\nconst detailsQuery = graphql` \n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        author,\n        title, \n        skills,\n        specialties\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Image from 'gatsby-image'\nimport { getSiteLogo } from '../hooks/site-logo'\n\nconst Header = ({ siteTitle }) => {\n  const logo = getSiteLogo();\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">\n        <h1>\n          <a href=\"/\">\n            <Image fixed={logo.fixed} alt=\"Vivens Ndatinya\" />\n          </a>\n        </h1>\n        <p className=\"tagline\">RELENTLESS DEVELOEPR - Practice & Building & Ship </p> {/* UNSTOPPABLE DEVELOPER  */}\n        {/* <p className=\"tagline\">Learning by Practicing & Building, Stepping Stone to CONFIDENCE & UNSTOPPABLE EXCELLENCE</p> */}\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <Link\n              to=\"/\"\n              activeClassName=\"active\"\n            >\n              HOME\n          </Link>\n          </li>\n          <li>\n            <Link\n              to=\"blog\"\n              activeClassName=\"active\"\n            >\n              BLOG\n          </Link>\n          </li>\n           <li>\n            <Link\n              to=\"goals\"\n              activeClassName=\"active\"\n            >\n             GOAL WALL\n          </Link>\n          </li>\n          <li>\n            <Link\n              to=\"projects\"\n              activeClassName=\"active\"\n            >\n              PROJECTS\n          </Link>\n          </li>\n          <li>\n            <Link\n              to=\"reading-list\"\n              activeClassName=\"active\"\n            >\n              READING LIST\n          </Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport const getSiteLogo = () => {\n  const data  = useStaticQuery(\n    graphql`\n    query {\n        file(relativePath: { eq: \"logo.png\" }) {\n          childImageSharp {\n            fixed(width: 400, height: 60) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `\n  )\n  return data.file.childImageSharp\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql, Link } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"site\">\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"site-content\">\n          {children}\n        </div>\n        <footer>\n          <div>\n            <span className=\"label\">Stay in touch</span>\n            <a href=\"https://github.com/vivensn\" target=\"_blank\" className=\"social-media-icon-link\"><span className=\"ion-logo-github\"></span></a>\n            <a href=\"https://twitter.com/vivens_n\" target=\"_blank\" className=\"social-media-icon-link\"><span className=\"ion-logo-twitter\"></span></a>\n            <a href=\"https://www.linkedin.com/in/vivens-ndatinya-baa4a658/\" target=\"_blank\" className=\"social-media-icon-link\"><span className=\"ion-logo-linkedin\"></span></a>\n          </div>\n          <div>\n            <span><a href>Coded with love by {data.site.siteMetadata.author} {new Date().getFullYear()}</a></span>\n          </div>\n        </footer>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}