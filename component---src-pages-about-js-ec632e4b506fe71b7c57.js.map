{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","AboutPage","a","createElement","title","style","maxWidth","marginBottom","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","className","class","href","gatsby_browser_entry","to","activeClassName","defaultProps","Layout","Fragment","header","site","siteMetadata","Date","getFullYear","author","_1032540886","node","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-about-js-ec632e4b506fe71b7c57.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n// import Image from '../components/image';\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst AboutPage = () => (\n  <Layout>\n    <SEO title=\"Vivens\" />\n    <p>My mission is Learn, Build, Deploy and Teach Web technologies</p>\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n    <p>Thank you visting my site.  My name is vivens and I am Software engineer; I'm passionate about my progress, I write about my day to day software development journey, with the hope that my lessions, experiences, struggles and failures may empower others. \n      I aim to write about lessons that are relevant, with tips and tricks to get through many aspects of everyday life. Enjoy the content.</p>\n      {/* <Image /> */}\n    </div>\n  </Layout>\n)\n\nexport default AboutPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"header\">\n    <div class=\"logo\">\n      <h1>\n        <a href=\"/\">Vivens Ndatinya</a>\n      </h1>\n      <p>Software Engineer: JavaScript, React, Angular, Node.js, .NET Web API</p>\n    </div>\n    <nav>\n      <ul>\n        <li>\n        <Link\n          to=\"/\"\n          activeClassName=\"active\"\n        >\n          Articles\n        </Link>\n         </li>\n        <li>\n        <Link\n          to=\"projects\"\n          activeClassName=\"active\"\n        >\n          Projects\n        </Link>\n        </li>\n        <li>\n        <Link\n          to=\"about\"\n          activeClassName=\"active\"\n        >\n          About\n        </Link>\n        </li>\n      </ul>\n    </nav>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <div className=\"site\">\n        <Header siteTitle={data.site.siteMetadata.title}/>\n        <div className=\"site-content\">\n          {children}\n        </div>\n        <footer>\n          Copy Right {new Date().getFullYear()},\n          <span> {data.site.siteMetadata.author}</span>\n         </footer>\n      </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}